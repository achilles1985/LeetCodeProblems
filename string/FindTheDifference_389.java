package string;

/**E
 *  Given two strings s and t which consist of only lowercase letters.
 * String t is generated by random shuffling string s and then add one more letter at a random position.
 * Find the letter that was added in t.
 *
 * Example:
 * Input:
 * s = "abcd"
 * t = "abcde"
 * Output:
 * e
 *
 * Explanation:
 * 'e' is the letter that was added.
 */
/*
    Questions:
        1. Max string length?
        2. All unique letters?
    Tips: XOR operation number1^number1 = 0, number1^0 = number1. So if s == t, s^t == 0.
 */
public class FindTheDifference_389 {

    public static void main(String[] args) {
        FindTheDifference_389 s = new FindTheDifference_389();
        System.out.println(s.findTheDifference2("abcd", "abcde")); //e
    }

    // O(n) - time, O(1) - space
    public char findTheDifference(String s, String t) {
        int[] frequency = new int[26];
        for (int i = 0; i < t.length(); i++) {
            frequency[t.charAt(i) - 'a']++;
        }
        for (int i = 0; i < s.length(); i++) {
            frequency[s.charAt(i) - 'a']--;
        }
        for (int i = 0; i < frequency.length; i++) {
            if (frequency[i] != 0) {
                return (char) (i + 'a');
            }
        }
        return ' ';
    }

    // O(n) - time, O(1) - space
    public char findTheDifference2(String s, String t) {
        int ch = 0;
        for (int i = 0; i < s.length(); i++) {
            ch ^= (s.charAt(i) - 'a');
        }
        for (int i = 0; i < t.length(); i++) {
            ch ^= (t.charAt(i) - 'a');
        }
        return (char) (ch + 'a');
    }
}
